---
import Layout from '@layouts/Layout.astro'
import Header from '@components/Header.astro'
import Title from '@components/Title.astro'
import Container from '@components/Container.astro'
import Sidebar from '@components/Sidebar.astro'
import PrintButton from '@components/PrintButton.astro'
import Badge from '@components/Badge.astro'
import Trans from '@components/Trans.astro'
import GitHubLinkWithStars from '@components/GitHubLinkWithStars.astro'
import NpmLinkWithDownloads from '@components/NpmLinkWithDownloads.astro'
import dayjs from 'dayjs'
import duration from 'dayjs/plugin/duration'
import { getLangFromUrl, useTranslations } from '../../i18n/utils'

dayjs.extend(duration)

const lang = getLangFromUrl(Astro.url)
const t = useTranslations(lang)

function yearsSince(date: dayjs.ConfigType) {
  const currentDate = dayjs()
  const startDate = dayjs(date)
  return currentDate.diff(startDate, 'year')
}

function formatDate(date: dayjs.ConfigType) {
  return dayjs(date).format('MMM YYYY')
}

function calculateDuration(
  startDate: dayjs.ConfigType,
  endDate: dayjs.ConfigType,
) {
  const start = dayjs(startDate)
  const end = dayjs(endDate)
  const years = end.diff(start, 'year')
  // Subtract years and calculate remaining months
  const afterYears = start.add(years, 'year')
  const months = end.diff(afterYears, 'month')
  // Format the output
  const yearsText = years > 0 ? `${years}yrs ` : ''
  const monthsText = months > 0 ? `${months}mos` : ''
  return `${yearsText}${monthsText}`.trim()
}
---

<Layout>
  <Header />

  <main class="mx-auto flex max-w-6xl flex-col lg:flex-row">
    <div class="w-full lg:w-1/4">
      <Container>
        <Sidebar />
      </Container>
    </div>

    <div class="w-full lg:w-3/4">
      <Container>
        <div class="space-y-8">
          <section>
            <Title>{t('about_me.title')}</Title>
            {
              t('about_me.content', {
                age: yearsSince('1998-01-23'),
                yearsOfExperience: yearsSince('2016-09-14'),
              }).map((text) => <p>{text}</p>)
            }
          </section>

          <section>
            <Title>{t('work_experience.title')}</Title>
            <div class="space-y-6">
              {
                t('work_experience.positions').map((position) => {
                  const [start, end] = position.duration
                  const durationText = calculateDuration(start, end ?? dayjs())

                  return (
                    <div>
                      <h3 class="font-semibold">{position.title}</h3>
                      <p>
                        <small>
                          {formatDate(start)} â€”{' '}
                          {end ? formatDate(end) : t('site.present')}
                          {durationText && <span>({durationText})</span>}
                        </small>
                      </p>
                      <p class="space-x-2">
                        {position.tools.map((tool) => (
                          <Badge>{tool}</Badge>
                        ))}
                      </p>
                      <ul>
                        {position.tasks.map((task) => (
                          <li>{task}</li>
                        ))}
                      </ul>
                    </div>
                  )
                })
              }
            </div>
          </section>

          <section>
            <Title>{t('skills_stack.title')}</Title>
            <ul>
              {t('skills_stack.content').map((text) => <li>{text}</li>)}
            </ul>
          </section>

          <section>
            <Title>{t('open_source.title')}</Title>
            {t('open_source.description').map((text) => <p>{text}</p>)}
            <div class="grid grid-cols-1 gap-4 sm:grid-cols-2 sm:gap-8">
              <div>
                <Badge>{t('site.most_popular')}</Badge>
                <h3 class="mt-2 font-semibold">emmet-language-server</h3>
                <p>A language server for emmet.io</p>
                <div class="flex space-x-4 text-lg">
                  <NpmLinkWithDownloads
                    package="@olrtg/emmet-language-server"
                  />
                  <GitHubLinkWithStars repo="emmet-language-server" />
                </div>
              </div>

              <div>
                <Badge>{t('site.in_development')}</Badge>
                <h3 class="mt-2 font-semibold">nvim-i18n</h3>
                <p>A plugin to improve your workflow with i18n</p>
                <div class="flex space-x-4 text-lg">
                  <GitHubLinkWithStars repo="nvim-i18n" />
                </div>
              </div>

              <div>
                <h3 class="font-semibold">nvim-emmet</h3>
                <p>
                  A plugin that adds integration between Neovim and
                  emmet-language-server.
                </p>
                <div class="flex space-x-4 text-lg">
                  <GitHubLinkWithStars repo="nvim-emmet" />
                </div>
              </div>

              <div>
                <h3 class="font-semibold">nvim-rename-state</h3>
                <p>
                  Rename the getter and the setter of a state hook in
                  react/solidjs at the same time.
                </p>
                <div class="flex space-x-4 text-lg">
                  <GitHubLinkWithStars repo="nvim-rename-state" />
                </div>
              </div>
            </div>
          </section>

          <section>
            <Title>{t('languages.title')}</Title>
            <Trans i18nKey="languages.content">
              <a
                href="https://www.efset.org/cert/8txjJV"
                target="_blank"
                rel="noreferrer"
                class="text-link">C1 Advanced</a
              >
            </Trans>
          </section>
        </div>

        <footer
          class="mt-8 flex items-center justify-center space-x-4 print:hidden"
        >
          <PrintButton />

          <a
            href="https://github.com/olrtg/resume"
            target="_blank"
            class="text-link">{t('button.repo')}</a
          >
        </footer>
      </Container>
    </div>
  </main>
</Layout>
