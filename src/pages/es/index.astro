---
import { changeLanguage, t } from "i18next";
import { Trans } from "astro-i18next/components";
import { Icon } from "astro-icon";
import Layout from "../../layouts/Layout.astro";
import Header from "../../components/Header.astro";
import Title from "../../components/Title.astro";
import Container from "../../components/Container.astro";
import Sidebar from "../../components/Sidebar.astro";
import PrintButton from "../../components/PrintButton.astro";
import Badge from "../../components/Badge.astro";
import GitHubLinkWithStars from "../../components/GitHubLinkWithStars.astro";
import NpmLinkWithDownloads from "../../components/NpmLinkWithDownloads.astro";

changeLanguage("es");

function yearsSince(start: Date) {
    const ageDifMs = Date.now() - start.getTime();
    const ageDate = new Date(ageDifMs);
    return Math.abs(ageDate.getUTCFullYear() - 1970);
}
---

<Layout>
  <Header />

  <main class="flex flex-col max-w-6xl mx-auto lg:flex-row">
    <div class="w-full lg:w-1/4">
      <Container>
        <Sidebar />
      </Container>
    </div>

    <div class="w-full lg:w-3/4">
      <Container>
        <div class="space-y-8">
          <section>
            <Title>{t('about_me.title')}</Title>
            {
              t('about_me.content', {
                age: yearsSince(new Date('1998-01-23')),
                yearsOfExperience: yearsSince(new Date('2016-09-14')),
                returnObjects: true,
              }).map((text: unknown) => <p>{text}</p>)
            }
          </section>

          <section>
            <Title>{t('work_experience.title')}</Title>
            <div class="space-y-6">
              {
                t('work_experience.positions', {
                  returnObjects: true,
                }).map(position => (
                  <div>
                    <h3 class="font-semibold">{position.title}</h3>
                    <p>
                      <small>{position.duration}</small>
                    </p>
                    <p class="space-x-2">
                      {position.tools.map(tool => (
                        <Badge>{tool}</Badge>
                      ))}
                    </p>
                    <ul>
                      {position.tasks.map(task => (
                        <li>{task}</li>
                      ))}
                    </ul>
                  </div>
                ))
              }
            </div>
          </section>

          <section>
            <Title>{t('skills_stack.title')}</Title>
            <ul>
              {
                t('skills_stack.content', {
                  returnObjects: true,
                }).map(text => <li>{text}</li>)
              }
            </ul>
          </section>

          <section>
            <Title>{t('open_source.title')}</Title>
            {
              t('open_source.description', {
                returnObjects: true,
              }).map(text => <p>{text}</p>)
            }
            <div class="grid grid-cols-1 gap-4 sm:grid-cols-2 sm:gap-8">
              <div>
                <Badge>{t('site.most_popular')}</Badge>
                <h3 class="font-semibold mt-2">emmet-language-server</h3>
                <p>A language server for emmet.io</p>
                <div class="flex space-x-4 text-lg">
                  <NpmLinkWithDownloads
                    package="@olrtg/emmet-language-server"
                  />
                  <GitHubLinkWithStars repo="emmet-language-server" />
                </div>
              </div>

              <div>
                <Badge>{t('site.in_development')}</Badge>
                <h3 class="font-semibold mt-2">nvim-i18n</h3>
                <p>A plugin to improve your workflow with i18n</p>
                <div class="flex space-x-4 text-lg">
                  <GitHubLinkWithStars repo="nvim-i18n" />
                </div>
              </div>

              <div>
                <h3 class="font-semibold">nvim-emmet</h3>
                <p>
                  A plugin that adds integration between Neovim and
                  emmet-language-server.
                </p>
                <div class="flex space-x-4 text-lg">
                  <GitHubLinkWithStars repo="nvim-emmet" />
                </div>
              </div>

              <div>
                <h3 class="font-semibold">nvim-rename-state</h3>
                <p>
                  Rename the getter and the setter of a state hook in
                  react/solidjs at the same time.
                </p>
                <div class="flex space-x-4 text-lg">
                  <GitHubLinkWithStars repo="nvim-rename-state" />
                </div>
              </div>
            </div>
          </section>

          <section>
            <Title>{t('languages.title')}</Title>
            <Trans i18nKey="languages.content">
              <a
                href="https://www.efset.org/cert/8txjJV"
                target="_blank"
                rel="noreferrer"
                class="text-link">C1 Advanced</a
              >
            </Trans>
          </section>
        </div>

        <footer
          class="mt-8 space-x-4 flex items-center justify-center print:hidden"
        >
          <PrintButton />

          <a
            href="https://github.com/olrtg/resume"
            target="_blank"
            class="text-link">{t('button.repo')}</a
          >
        </footer>
      </Container>
    </div>
  </main>
</Layout>
